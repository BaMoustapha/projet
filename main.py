import pandas as pd

# Charger le fichier CSV dans un DataFrame
file_path = "covid19_data.csv"  
df = pd.read_csv(file_path)

# VÃ©rifier les premiÃ¨res lignes
print("ğŸ”¹ AperÃ§u des premiÃ¨res lignes du dataset :")
print(df.head())

# VÃ©rifier la taille du dataset
print(f"\nğŸ”¹ Nombre de lignes: {df.shape[0]}, Nombre de colonnes: {df.shape[1]}")

# VÃ©rifier les informations gÃ©nÃ©rales sur les colonnes
print("\nğŸ”¹ Informations gÃ©nÃ©rales sur les donnÃ©es :")
print(df.info())

# Statistiques de base sur les valeurs numÃ©riques
print("\nğŸ”¹ Statistiques descriptives :")
print(df.describe())

# VÃ©rification des valeurs uniques dans les colonnes catÃ©gorielles
print("\nğŸ”¹ Valeurs uniques pour les colonnes catÃ©gorielles :")
for col in df.select_dtypes(include=['object']).columns:
    print(f"{col}: {df[col].unique()}") 
    
# VÃ©rifier les valeurs manquantes
print("\nğŸ”¹ Nombre de valeurs manquantes par colonne :")
print(df.isnull().sum())

# Supprimer les lignes avec trop de valeurs manquantes (si plus de 20% des valeurs sont nulles)
df = df.dropna(thresh=df.shape[1] * 0.8)

# Remplacer les valeurs nulles par des valeurs par dÃ©faut
if 'age' in df.columns:
    df['age'].fillna(df['age'].median(), inplace=True) 
if 'classification' in df.columns:
    df['classification'].fillna('Inconnu', inplace=True)  

# VÃ©rification des valeurs aberrantes (ex : Ã¢ge nÃ©gatif ou trop Ã©levÃ©)
if 'age' in df.columns:
    print("\nğŸ”¹ VÃ©rification des valeurs aberrantes (Ã¢ge) :")
    print(df['age'].describe()) 

    # Suppression des Ã¢ges invalides
    df = df[df['age'] > 0]

# Transformer les dates en format datetime si nÃ©cessaire
if 'date' in df.columns:
    df['date'] = pd.to_datetime(df['date'], errors='coerce')

if 'age' in df.columns:
    df['groupe_age'] = pd.cut(df['age'], bins=[0, 18, 35, 60, 120], labels=['Enfant', 'Jeune', 'Adulte', 'Senior'])

# Afficher un aperÃ§u final aprÃ¨s nettoyage
print("\nğŸ”¹ AperÃ§u des donnÃ©es aprÃ¨s nettoyage :")
print(df.head())

# VÃ©rifier les valeurs manquantes aprÃ¨s traitement
print("\nğŸ”¹ Valeurs manquantes aprÃ¨s nettoyage :")
print(df.isnull().sum())

# Sauvegarder le dataset nettoyÃ© (optionnel)
df.to_csv("covid19_data_cleaned.csv", index=False)
print("\n DonnÃ©es nettoyÃ©es et sauvegardÃ©es sous 'covid19_data_cleaned.csv'")
